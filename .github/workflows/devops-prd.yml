# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: devops-prd

on:
  pull_request:
    branches: [ "main" ]

jobs:
  unit-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run Unit Tests
        run: mvn -B verify -Punit-tests

  integration-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build-DB
        run: |
          cd src/main/resources/oracle
          docker-compose build

      - name: Create-DB
        run: |
          cd src/main/resources/oracle 
          docker-compose up -d    

      - name: Run Integration Tests
        run: mvn -B verify -Pintegration-tests

  code-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build-DB
        run: |
          cd src/main/resources/oracle
          docker-compose build

      - name: Create-DB
        run: |
          cd src/main/resources/oracle 
          docker-compose up -d

      - name: Run code coverage
        run: mvn -B verify -Pcoverage

      - name: Sonar code coverage
        run: mvn sonar:sonar -Pcoverage

      - name: Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2.11.0

      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-report
          path: target/site/jacoco/

  build:
    needs: [ unit-test, integration-test, code-coverage ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B clean package -DskipTests
